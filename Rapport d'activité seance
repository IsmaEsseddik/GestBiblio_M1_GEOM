------------------------------Seance 1 - 16Decembre2016-------------------------------
Presentation et choix de sujets.
------------------------------Seance 2 - 06Janvier2017-------------------------------

objectif 1: choix et installation d'un logiciel de Base de données (BDD).
objectif 2: reflexion et listing de quelques commandes utiles.
Usage de SQLite : import sous python de SQlite3 (Ou telechargement via cmd, pip install sqlite).

___________Pourquoi SQLite?_____________
+autonomie et independence externe, peut etre utilisé sans server.
+Deja configuré ne necessite pas d'installation ni de reglage d'admin.
+la base de donnée entiere sera stockée dans un fichier unique.
+légereté (400kib).
+les transactions sont securisées, compatibilite ACID (atomicité, cohérence, isolation et durabilité).
+disponible sous differents OS.


___________operation à effectuer_____________
1.Creer une table dans la bdd (2 table, une pour les livres et une pour les lecteurs);
2.Ajouter/retirer/modifier un champ dans la table (Table, nom_champ);
3.Modifier une entrée ;

_______Commandes python SQLite__________
import sqlite3 (importer sqlite)
sqlite3.databases (liste les nom et fichiers lié à la BDD)
sqlite3.exit (quitter rapidement sqlite)


------------------------------Seance 3 - 13Janvier2017-------------------------------

___________Commandes SQLite3_____________
pour se connecter a une base de donnée : a=sqlite3.connect(lien) ;
pour placer le curseur sur la base de donnée b=a.cursor() ;
pour executer des requete sql b.execute("""requête en SQL """) ;
pour se deconnecter de la base de donnée: a.close() ;

creation de tables avec clés primaires & etrangeres.


------------------------------Seance 4 - 20Janvier2017------------------------------------
-Les tables de la base de données ont été crée et peuvent être remplies.
-Pour remplir la base de données avec des codes isbn : inscrption faite sur http://isbnplus.com/data/
(en attente d'approbation pour les services), il s'agit d'une API qui permettra pour chaque nouvelle aquisition d'obtenir 
des informations et de les rentrer dans la base de donnée (table infos_doc).
Installation de PyCurl (pip install PyCurl) pour effectuer des requete Curl sous python.
Documentation ici : http://pycurl.io/docs/latest/quickstart.html
 

------------------------------Seance 5 (1/2) - Lundi30Janvier2017------------------------------------
-Les classes d'objet relatif a la Base de données ont été crées.
-creation de fonction sqlite pour interreagir avec la base de données


------------------------------Seance 6 - Mercredi08Fevrier2017---------------------------------------
-le site web pour le catalogue a été entammée (PHP,CSS,JS)
-redefinition des classes
-creation de premieres fonction via sqlite3 (recherche d'un isbn, ajout d'un isbn)

------------------------------Seance 7 - Vendredi17Fevrier2017---------------------------------------
-modification de ces premieres fonctions pour qu'elle puissent etre fonctionnelle sur des objets,
-creation de nouvelles fonction sur le meme principe en respectant les conditons imposé par l'enoncé
-restructuration des classes pour un meilleure interaction entre objets/fonction. En effet il est plus
pratique de mettre un objet en argument d’une fonction car, en sachant qu’on impose aux objet des atributs
(dont un relatif a la table de reference dans la base de donnée), il sera donc impossible par exemple de 
rechercher dans une table « lecteur » via l’attribut « référence » d’un objet « exemplaire » puisque ce dernier
possède comme valeur statique de l’attributs « référence » la chaine de caractère «exemplaire» .
Dans la fonction on fera donc appel aux attributs d’un objet passé en argument. 
Les fonctions seront implémenté dans les classes d'objet une fois toutes créées.


------------------------------Seance 8 (1/2) - Lundi20Fevrier2017---------------------------------------
les fonction de requetes sont beaucoup trop longue: raccourcicement de ces dernieres par la mise en fonction du 
code redondant.

------------------------------Seance 9 (1/2) - Mardi21Fevrier2017---------------------------------------
débogage ...

-----------------------------Seance 10 - Mercredi08Mars2017---------------------------------------
De nombreuses fonction d'interactions avec la base de données(requetes de verifications et de modifications) ont été ecrites lors des congées de mars,(en plus d'une petite progression dans l'elaboration de l'interface graphique).

1)recherche sur le pattern MVC Modele vue contrôleur
Faut t-il faire usage de differentes class pour gerer le controle
et les modifications de la base de données ou alors simplement rendre les objet eux même autonome avec des methodes

1ere possibilité:
Par exemple en plus des classes d'objets info_documents exemplaire lecteurs... 
- on cree une class "modele" specialement pour executer les requetes sur la base de donnée(sans controle)
- on cree une autre classe "controleur" contenant uniquement les requetes contrôles qui va autoriser les methodes de la classe "modele".

2ieme possibilité:
on regroupe le contenu des deux classes precedentes dans une super classe.

3ieme possibilité:
les classes d'objets info_documents exemplaire lecteurs etc. possede ces methode leur permettant d'enregistrer
leurs propres attributs dans la base de donnée en controlant eux même si cela est possible.

2) Recherche sur le framework Django

-----------------------------Seance 11 - Vendredi10Mars2017---------------------------------------
Integration des fonctions dans les classes en tant que methodes.


-----------------------------Seance 12 - Vendredi17Mars2017---------------------------------------
Recherche sur le fonctionnement d'une api/rest.
l'Api ISBN+ n'offre pas un service complet pour la litterature française.
Recheche d'un autre moyen pour integrer les métadonné d'un ISBN dans un objet infoDoc : https://pypi.python.org/pypi/isbnlib
un package python qui peut etre tres utile : isbnlib 3.6.7. En plus de recuperer les metadonnées d'un livre, il permet  aussi de valider
l'existence de l'isbn et de faire des conversion sur le format de serie de chifre(EAN 13 <=> 10), il utilise par default le service gratuit
offert par google GoogleBooks.


-----------------------------Seance 13 - Mercredi22Mars2017---------------------------------------
installation de la librairie isbn_lib
test des fonctions et integration dans la class info_document
ecriture de l'algorithme de gestion de la tableinfo document


-----------------------------Seance 14 - Vendredi24Mars2017---------------------------------------
(fonctionnalité Github sous linux shell)
debogage et reajustement des classes

-----------------------------Seance 15 - Vendredi31Mars2017---------------------------------------
(Presentation Igast)
Test de fonctionalités, documentation de code, planification d'une interface pour l'usage de l'API

-----------------------------Seance 16 - Mardi11avril2017---------------------------------------
 Redefinition des objectif du projet en fonction du temps restant: un mois de fonctionnalité 1 mois sur l'interface graphique 
 Assignement des exceptions SQlite3.
 installation du logiciel DBBrowser Sqlite pour visualiser le contenu de la base de données.
 poursuite des tests des methodes

-----------------------------Seance 17 - Mercredi12avril2017---------------------------------------
Installation et prise en main de pyCharm
nouvelle methode de recherche dans la base de données get_meta avec usage d'expression reguliere.

-----------------------------Seance 18 - Vendredi14avril2017---------------------------------------
nouvelles methodes de recherche dans la base de données set et get,
nouvelle methode mises a jour de champ
reorganisation des premiers objet
